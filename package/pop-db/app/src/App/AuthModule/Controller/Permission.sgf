<?php
namespace {{app}}\AuthModule\Controller;

class Permission extends \Strukt\Framework\Contract\Controller{

	public function findAll(){

		$sql = select("p.id, p.name")
				->from("permission p")
				->orderBy("p.name", order:"ASC");

		return pdo()->execQuery($sql);
	}

	public function findByName(string $name){

		$permission = db("permission")->findOne(["name"=>$name]);

	   	return $permission;
	}

	public function find(int $id){

		$permission = db("permission", $id);

		return $permission;
	}

	public function findRolesByPermission(string $name){

		$sql = select("r.id as role_id, p.id as perm_id")
				->addSelect("r.name as role_name, p.name as perm_name")
				->from("role_permission rp")
				->leftjoin("permission p ON rp.permission_id = p.id")
				->leftjoin("role r ON rp.role_id = r.id")
				->where("p.name = :name");

		return pdo()->execQuery($sql, ["name"=>$name]);
	}

	public function pager(array $filter = [], int $start_from = 1, int $page_size = 10){

		$hasFilter = array_key_exists("name", $filter);

		$sql = select("p.id, p.name")->from("permission p");
		$sql = $hasFilter?$sql->where("p.name LIKE :name"):$sql;
		$sql = $sql->orderBy("id", order:"ASC")->page($start_from, $page_size);

		$pdo = pdo();
		if($hasFilter)
			$rs = $pdo->execQuery((string)$sql, ["name"=>$filter["name"]]);

		if(negate($hasFilter))
			$rs = $pdo->execQuery((string)$sql);

		return $rs;
	}

	public function add(array $perm_data){

		extract($perm_data);

		$permission = $this->get("Permission");

		try{

			$permission->name = $name;
			$permission->descr = $descr;
			$permission->save();

			return $permission;
		}
		catch(\Exception $e){

			cmd("service.logger")->error($e);

			return null;
		}
	}

	public function update(int $id, array $perm_data){

		extract($perm_data);

		$permission = $this->find($id);

		try{

			$permission->name = $name;
			$permission->descr = $descr;
			$permission->save();

			return true;
		}
		catch(\Exception $e){

			cmd("service.logger")->error($e);

			return false;
		}
	}
}